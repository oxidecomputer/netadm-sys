(function() {
    var type_impls = Object.fromEntries([["libnet",[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CSaExtType%3E-for-u16\" class=\"impl\"><a class=\"src rightside\" href=\"src/libnet/pf_key.rs.html#61\">Source</a><a href=\"#impl-From%3CSaExtType%3E-for-u16\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"enum\" href=\"libnet/pf_key/enum.SaExtType.html\" title=\"enum libnet::pf_key::SaExtType\">SaExtType</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.u16.html\">u16</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/libnet/pf_key.rs.html#61\">Source</a><a href=\"#method.from\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.86.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(enum_value: <a class=\"enum\" href=\"libnet/pf_key/enum.SaExtType.html\" title=\"enum libnet::pf_key::SaExtType\">SaExtType</a>) -&gt; Self</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<SaExtType>","libnet::sys::addr_family_t","libnet::sys::sa_family_t"]]]]);
    if (window.register_type_impls) {
        window.register_type_impls(type_impls);
    } else {
        window.pending_type_impls = type_impls;
    }
})()
//{"start":55,"fragment_lengths":[1430]}